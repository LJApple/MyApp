// Generated by CoffeeScript 1.10.0
(function() {
  var browserSync, concat, del, gulp, minifyCss, runSequence, uglify,assets,fs;
	fs = require('fs');
  gulp = require('gulp');

  runSequence = require('run-sequence');

  del = require('del');

  uglify = require('gulp-uglify');

  concat = require('gulp-concat');

  minifyCss = require('gulp-minify-css');

  browserSync = require('browser-sync').create();
  
  // 获取参数
  assets = JSON.parse(fs.readFileSync('assets.json'))

  gulp.task('default', function(callback) {
    return runSequence(['clean'], ['build'], ['serve', 'watch'], callback);
  });

  gulp.task('clean', function(callback) {
    return del(['./dist/'], callback);
  });

  gulp.task('build', function(callback) {
    return runSequence(
    	['assetsJs','assetsCss','assetsFonts'],
    	['appJs', 'appCss', 'copyHtml'], 
    	callback);
  });
  
//app文件处理
	gulp.task('copyHtml',function(){
		 return gulp.src('./src/**/*.html').pipe(gulp.dest('./dist/'))
	});
	gulp.task('appJs',function(){
		return gulp.src(assets.appJs).pipe(concat('app.js',{newLine:';\n'}))
		.pipe(gulp.dest('./dist/assets/js'))
	});
	gulp.task('appCss',function(){
		 return gulp.src(assets.appCss).pipe(concat('app.css',{newLine:'\n\n'}))
		 .pipe(gulp.dest('./dist/assets/css'));
	});
	//打包js
	gulp.task('assetsJs',function(){
		 return gulp.src(assets.assestsJs).pipe(concat('assests.js',{newLine:';\n'}))
		 .pipe(gulp.dest('./dist/assets/js/'));
	});
	// 打包css
	gulp.task('assetsCss',function(){
		 return gulp.src(assets.assetsCss).pipe(concat('assests.css',{newLine:'\n\n'}))
		 .pipe(gulp.dest('./dist/assets/css/'));
	});
	// 字体
	gulp.task('assetsFonts',function(){
		 return gulp.src(assets.assetsFonts)
		 .pipe(gulp.dest('./dist/assets/fonts/'))
	});
  gulp.task('serve', function() {
    return browserSync.init({
      server: {
        baseDir: './dist/'
      },
      port: 8020
    });
  });

  gulp.task('watch', function() {
    return gulp.watch('./src/**/*.*', ['reload']);
  });

  gulp.task('reload', function(callback) {
    return runSequence(['build'], ['reload-browser'], callback);
  });

  gulp.task('reload-browser', function() {
    return browserSync.reload();
  });

}).call(this);

//# sourceMappingURL=gulpfile.js.map
